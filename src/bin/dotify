#! /usr/bin/env bash
set -e
shopt -s extglob
[ -n "$DOTIFY_DEBUG" ] && set -x

# dotify {{DOTIFY_VERSION}}
# https://github.com/jimeh/dotify
#
# Copyright (c) {{COPYRIGHT_YEAR}} Jim Myhrberg.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.


#
# Helper functions
#

source "../lib/helpers/arguments.sh"
source "../lib/helpers/trim.sh"

#
# Internal functions
#

source "../lib/internals/action.sh"
source "../lib/internals/compile-dotfile.sh"
source "../lib/internals/create-symlink.sh"
source "../lib/internals/execute-dotfile.sh"
source "../lib/internals/has-action.sh"
source "../lib/internals/register-action.sh"
source "../lib/internals/setup-root-link.sh"

#
# Dotify attributes
#

source "../lib/attributes/default-action.sh"
source "../lib/attributes/dotfile-path.sh"
source "../lib/attributes/dry-run.sh"
source "../lib/attributes/root-link.sh"
source "../lib/attributes/run-mode.sh"
source "../lib/attributes/source-path.sh"
source "../lib/attributes/target-path.sh"

#
# Dotify commands
#

source "../lib/commands/clean.sh"
source "../lib/commands/compile.sh"
source "../lib/commands/help.sh"
source "../lib/commands/info.sh"
source "../lib/commands/install.sh"
source "../lib/commands/print-version.sh"
source "../lib/commands/uninstall.sh"
source "../lib/commands/version.sh"

#
# Built-in action plugins
#

source "../actions/link.sh"
source "../actions/git.sh"

#
# Dotfile commands
#

source "../lib/dotfile-commands/root_link.sh"
source "../lib/dotfile-commands/default_action.sh"
source "../lib/dotfile-commands/include.sh"

#
# Argument Parsing
#

ARG_DOTFILE="" # --dotfile / -f
ARG_TARGET=""  # --target  / -t
ARG_DRY_RUN="" # --dry-run / -d
ARG_HELP=""    # --help    / -h
ARG_VERSION="" # --version / -v

if has-argument dotfile f "$@"; then
  ARG_DOTFILE="$(parse-argument dotfile f "$@")"
fi

if has-argument target t "$@"; then
  ARG_TARGET="$(parse-argument target t "$@")"
fi

if has-argument dry-run d "$@"; then
  ARG_DRY_RUN="1"
fi

if has-argument help h "$@"; then
  ARG_HELP="1"
fi

if has-argument version v "$@"; then
  ARG_VERSION="1"
fi


#
# Command Parsing
#

# Command is first argument that does not start with a dash or plus.
for arg in "$@"; do
  if [ -n "$skip_next" ]; then
    skip_next=
  elif [[ "$arg" =~ ^(--dotfile|-f|--taraget|-t)$ ]]; then
    skip_next=1
  elif [[ "$arg" != "-"* ]] && [[ "$arg" != "+"* ]]; then
    command="$arg"
    break
  fi
done

# Show help and exit if help arguments or command are given.
if [ -n "$ARG_HELP" ] || [ "$command" == "help" ]; then
  dotify-command-help
  exit
fi

# Show version info and exit if version arguments or command are given.
if [ -n "$ARG_VERSION" ] || [ "$command" == "version" ]; then
  dotify-command-help | head -1
  exit
fi

# Deal with the commands.
case "$command" in
  "info" )
    dotify-command-info
    ;;
  "compile" )
    dotify-command-compile
    ;;
  "" | "install" )
    dotify-command-install
    ;;
  "uninstall" )
    dotify-command-uninstall
    ;;
  "clean" )
    dotify-command-clean
    ;;
esac

exit $?
